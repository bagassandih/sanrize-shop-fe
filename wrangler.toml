name = "sanrize-shop-fe" # Replace with your Cloudflare Pages project name if different
compatibility_date = "2024-05-15" # Specifies the compatibility date for Workers APIs
compatibility_flags = ["nodejs_compat"] # Enable Node.js compatibility

# This key is checked by Cloudflare Pages build system if a wrangler.toml is present.
# It should match the "Build output directory" in your Pages project settings.
pages_build_output_dir = ".vercel/output/static"

# Environment variables for the production environment
# These can also be set in the Cloudflare Pages dashboard, which is often preferred for sensitive values.
# IMPORTANT: Replace YOUR_PRODUCTION_BASE_API_URL_HERE with your actual API URL if not set in the dashboard.
[env.production.vars]
BASE_API_URL = "YOUR_PRODUCTION_BASE_API_URL_HERE"
# NODE_VERSION = "18" # If you need to specify a Node.js version for Cloudflare Pages build

# For local development using `wrangler pages dev`:
# 1. Run `npm run build` (which executes `next build`)
# 2. Then run `npx @cloudflare/next-on-pages` (this creates the .vercel/output directory)
# 3. Finally, serve with `wrangler pages dev .vercel/output/static`
#
# Local environment variables for `wrangler pages dev` can be defined in a .dev.vars file (ensure it's in .gitignore)
# or uncomment and use [vars] below for non-sensitive variables.
# [vars]
# BASE_API_URL = "http://localhost:your_local_api_port" # Example for local dev

# When deploying with Cloudflare Pages Git integration:
# - Set "Build command" to: npm run build:pages
# - Set "Build output directory" to: .vercel/output/static
#
# When deploying manually with Wrangler CLI:
# 1. npm run build:pages
# 2. wrangler pages deploy .vercel/output/static
